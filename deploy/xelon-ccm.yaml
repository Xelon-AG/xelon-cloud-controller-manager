---
# Source: xelon-cloud-controller-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: xelon-cloud-controller-manager
  namespace: kube-system
---
# Source: xelon-cloud-controller-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:xelon-cloud-controller-manager
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["create", "get", "list", "update", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["list", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["services/status"]
    verbs: ["list", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "update", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create", "get", "list", "update", "watch"]
---
# Source: xelon-cloud-controller-manager/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:xelon-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:xelon-cloud-controller-manager
subjects:
  - kind: ServiceAccount
    name: xelon-cloud-controller-manager
    namespace: kube-system
---
# Source: xelon-cloud-controller-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xelon-cloud-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: xelon-cloud-controller-manager
  template:
    metadata:
      labels:
        app: xelon-cloud-controller-manager
    spec:
      dnsPolicy: Default
      hostNetwork: true
      priorityClassName: ""
      serviceAccountName: xelon-cloud-controller-manager
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node.cloudprovider.kubernetes.io/uninitialized"
          value: "true"
          effect: NoSchedule
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule
        - key: "node.kubernetes.io/not-ready"
          operator: Exists
          effect: NoSchedule
        - key: "node.kubernetes.io/unreachable"
          operator: Exists
          effect: NoSchedule
      containers:
        - name: xelon-cloud-controller-manager
          image: xelonag/xelon-cloud-controller-manager:v1.0.0
          imagePullPolicy: IfNotPresent
          args:
            - "--leader-elect=false"
            - "--v=2"
          env:
            - name: XELON_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: xelon-api-credentials
                  key: baseUrl
            - name: XELON_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: xelon-api-credentials
                  key: clientId
            - name: XELON_CLOUD_ID
              valueFrom:
                secretKeyRef:
                  name: xelon-api-credentials
                  key: cloudId
            - name: XELON_KUBERNETES_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: xelon-api-credentials
                  key: kubernetesClusterId
            - name: XELON_TOKEN
              valueFrom:
                secretKeyRef:
                  name: xelon-api-credentials
                  key: token
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
